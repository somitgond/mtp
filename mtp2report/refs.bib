@inproceedings{glove:2014,
  author    = {Jeffrey Pennington and
               Richard Socher and
               Christopher D. Manning},
  title     = {Glove: Global Vectors for Word Representation},
  booktitle = {{EMNLP}},
  year      = {2014}
}
@misc{rfc9293,
    series =    {Request for Comments},
    number =    9293,
    howpublished =  {RFC 9293},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9293},
    url =       {https://www.rfc-editor.org/info/rfc9293},
    author =    {Wesley Eddy},
    title =     {{Transmission Control Protocol (TCP)}},
    pagetotal = 98,
    year =      2022,
    month =     aug,
    abstract =  {This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.},
}
@misc{rfc5681,
    series =    {Request for Comments},
    number =    5681,
    howpublished =  {RFC 5681},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC5681},
    url =       {https://www.rfc-editor.org/info/rfc5681},
    author =    {Ethan Blanton and Dr. Vern Paxson and Mark Allman},
    title =     {{TCP Congestion Control}},
    pagetotal = 18,
    year =      2009,
    month =     sep,
    abstract =  {This document defines TCP's four intertwined congestion control algorithms: slow start, congestion avoidance, fast retransmit, and fast recovery. In addition, the document specifies how TCP should begin transmission after a relatively long idle period, as well as discussing various acknowledgment generation methods. This document obsoletes RFC 2581. {[}STANDARDS-TRACK{]}},
}
@misc{rfc6582,
    series =    {Request for Comments},
    number =    6582,
    howpublished =  {RFC 6582},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC6582},
    url =       {https://www.rfc-editor.org/info/rfc6582},
    author =    {Andrei Gurtov and Tom Henderson and Sally Floyd and Yoshifumi Nishida},
    title =     {{The NewReno Modification to TCP's Fast Recovery Algorithm}},
    pagetotal = 16,
    year =      2012,
    month =     apr,
    abstract =  {RFC 5681 documents the following four intertwined TCP congestion control algorithms: slow start, congestion avoidance, fast retransmit, and fast recovery. RFC 5681 explicitly allows certain modifications of these algorithms, including modifications that use the TCP Selective Acknowledgment (SACK) option (RFC 2883), and modifications that respond to "partial acknowledgments" (ACKs that cover new data, but not all the data outstanding when loss was detected) in the absence of SACK. This document describes a specific algorithm for responding to partial acknowledgments, referred to as "NewReno". This response to partial acknowledgments was first proposed by Janey Hoe. This document obsoletes RFC 3782. {[}STANDARDS-TRACK{]}},
}
@misc{rfc9438,
    series =    {Request for Comments},
    number =    9438,
    howpublished =  {RFC 9438},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9438},
    url =       {https://www.rfc-editor.org/info/rfc9438},
    author =    {Lisong Xu and Sangtae Ha and Injong Rhee and Vidhi Goel and Lars Eggert},
    title =     {{CUBIC for Fast and Long-Distance Networks}},
    pagetotal = 28,
    year =      2023,
    month =     aug,
    abstract =  {CUBIC is a standard TCP congestion control algorithm that uses a cubic function instead of a linear congestion window increase function to improve scalability and stability over fast and long-distance networks. CUBIC has been adopted as the default TCP congestion control algorithm by the Linux, Windows, and Apple stacks. This document updates the specification of CUBIC to include algorithmic improvements based on these implementations and recent academic work. Based on the extensive deployment experience with CUBIC, this document also moves the specification to the Standards Track and obsoletes RFC 8312. This document also updates RFC 5681, to allow for CUBIC's occasionally more aggressive sending behavior.},
}
@misc{rfc6582,
    series =    {Request for Comments},
    number =    6582,
    howpublished =  {RFC 6582},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC6582},
    url =       {https://www.rfc-editor.org/info/rfc6582},
    author =    {Andrei Gurtov and Tom Henderson and Sally Floyd and Yoshifumi Nishida},
    title =     {{The NewReno Modification to TCP's Fast Recovery Algorithm}},
    pagetotal = 16,
    year =      2012,
    month =     apr,
    abstract =  {RFC 5681 documents the following four intertwined TCP congestion control algorithms: slow start, congestion avoidance, fast retransmit, and fast recovery. RFC 5681 explicitly allows certain modifications of these algorithms, including modifications that use the TCP Selective Acknowledgment (SACK) option (RFC 2883), and modifications that respond to "partial acknowledgments" (ACKs that cover new data, but not all the data outstanding when loss was detected) in the absence of SACK. This document describes a specific algorithm for responding to partial acknowledgments, referred to as "NewReno". This response to partial acknowledgments was first proposed by Janey Hoe. This document obsoletes RFC 3782. {[}STANDARDS-TRACK{]}},
}
@misc{bachl22,
author = {Bachl, Maximilian},
year = {2022},
month = {06},
pages = {},
title = {Fair Queuing Aware Congestion Control},
doi = {10.48550/arXiv.2206.10561}
}
@ARTICLE{floyd93,
  author={Floyd, S. and Jacobson, V.},
  journal={IEEE/ACM Transactions on Networking}, 
  title={Random early detection gateways for congestion avoidance}, 
  year={1993},
  volume={1},
  number={4},
  pages={397-413},
  keywords={Transport protocols;Delay effects;Throughput;Propagation delay;Bandwidth;TCPIP;Traffic control;High-speed networks;Feedback;Delay estimation},
  doi={10.1109/90.251892}}
@ARTICLE{shao05,
  author={Shao Liu and Basar, T. and Srikant, R.},
  journal={IEEE/ACM Transactions on Networking}, 
  title={Exponential-RED: a stabilizing AQM scheme for low- and high-speed TCP protocols}, 
  year={2005},
  volume={13},
  number={5},
  pages={1068-1081},
  keywords={Protocols;Feedback;Heuristic algorithms;Algorithm design and analysis;Network topology;Aggregates;Sufficient conditions;Stability;IP networks;High-speed networks;Congestion control;dual algorithm;primal algorithm;primal-dual algorithm;RED;TCP},
  doi={10.1109/TNET.2005.857110}}
@INPROCEEDINGS{pan13,
  author={Pan, Rong and Natarajan, Preethi and Piglione, Chiara and Prabhu, Mythili Suryanarayana and Subramanian, Vijay and Baker, Fred and VerSteeg, Bill},
  booktitle={2013 IEEE 14th International Conference on High Performance Switching and Routing (HPSR)}, 
  title={PIE: A lightweight control scheme to address the bufferbloat problem}, 
  year={2013},
  volume={},
  number={},
  pages={148-155},
  keywords={Delays;Probability;Estimation;Internet;Throughput;Jitter;Linux;bufferbloat;Active Queue Management (AQM);Quality of Service (QoS);Explicit Congestion Notification (ECN)},
  doi={10.1109/HPSR.2013.6602305}}

